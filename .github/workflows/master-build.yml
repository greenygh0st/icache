name: Master

on:
  push:
    branches: [ master ]
  #pull_request:
  #  branches: [ master ]

jobs:
  build-api:

    runs-on: ubuntu-latest
    
    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      redis:
        # Docker Hub image
        image: redis
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps port 6379 on service container to the host
          - 6379:6379

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.301
    - name: Install dependencies
      run: dotnet restore iCache.sln
    - name: Build
      run: dotnet build ./iCache.API/iCache.API.csproj --configuration Release --no-restore
    - name: API Tests
      run: dotnet test ./iCache.Tests/iCache.Tests.csproj -c Release --verbosity normal --collect:"XPlat Code Coverage" /p:CI=true
      
      # Make sure we have proper coverage
    - name: Report Coverage for API Tests
      uses: codecov/codecov-action@v1
      with:
        file: ./iCache.Tests/TestResults/**/coverage.cobertura.xml
    - name: Get version
      id: get_version
      uses: greenygh0st/net-proj-release-version@v2
      with:
        # Filepath of the *.csproj file, relative to root of repository
        PROJ_FILE: ./iCache.API/iCache.API.csproj
    - name: Show Version
      run: echo "${{ steps.get_version.outputs.RELEASE_VERSION }}"
     
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
      
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push iCache to Docker
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        platforms: linux/amd64,linux/arm64,linux/386
        push: true
        tags: |
            greenygh0st/icache:latest
            greenygh0st/icache:${{ steps.get_version.outputs.RELEASE_VERSION }}
    
    # Publish iCache C# client to NuGet
    - name: publish icache C# client on version change
      id: publish_nuget
      uses: rohith/publish-nuget@v2
      with:
        # Filepath of the project to be packaged, relative to root of repository
        PROJECT_FILE_PATH: iCache.Client/iCache.Client.csproj
        VERSION_REGEX: <PackageVersion>(.*)<\/PackageVersion>
        # don't tag the commit
        TAG_COMMIT: false
        # API key to authenticate with NuGet server
        NUGET_KEY: ${{secrets.NUGET_KEY}}
